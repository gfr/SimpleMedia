<?php
/**
 * SimpleMedia.
 *
 * @copyright Axel Guckelsberger
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package SimpleMedia
 * @author Axel Guckelsberger <info@guite.de>.
 * @link http://zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.5 (http://modulestudio.de) at Mon Nov 05 23:27:05 CET 2012.
 */

/**
 * Installer implementation class.
 */
class SimpleMedia_Installer extends SimpleMedia_Base_Installer
{
    // feel free to extend the installer here
    /**
     * Install the SimpleMedia application.
     *
     * @return boolean True on success, or false.
     */
    public function install()
    {
        // call the parent class
        $result = parent::install();

        // adjust some vars
        $thumbDimensions = array();
        $thumbDimensions[] = array('width' => 250, 'height' => 187);
        $thumbDimensions[] = array('width' => 100, 'height' => 75);
        $this->setVar('thumbDimensions', $thumbDimensions);
        $this->setVar('shrinkDimensions', array('width' => 1600, 'height' => 1200));
        $this->setVar('allowedExtensions', 'gif, jpeg, jpg, png, pdf, txt, mp3, mp4, avi, mpg, mpeg, mov');
        $this->setVar('mediaDir', 'media/thefile');
        $this->setVar('mediaThumbDir', 'tmb');
        $this->setVar('mediaThumbExt', '_tmb_');
		
		// modvars not yet in the model!
/*		if (!isset($this->getVar('defaultCollection'))) {
			$this->setVar('defaultCollection', 0);
		}*/
        $this->setVar('maxUploadFileSize', 5000);
            
        // initialisation successful
        return $result;
    }
    
    /**
     * Create the default data for SimpleMedia.
     *
     * @return void
     */
    protected function createDefaultData()
    {
        // call the parent class
        $result = parent::createDefaultData();

        // add a root collection 
        try {
            $collection = new SimpleMedia_Entity_Collection();
            $collection->setTitle($this->__('Default'));
            $collection->setDescription($this->__('This is the default root collection for your media and collections'));
            $this->entityManager->persist($collection);
            $this->entityManager->flush();
			// set this as default collection for new media
			$this->setVar('defaultCollection', $collection->getId());
        } catch (Exception $e) {
            return LogUtil::registerError($e->getMessage());
        }

        return true;
    }
}
